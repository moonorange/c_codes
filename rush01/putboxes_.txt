●コメント集

★冒頭

16 /* 日本語のコメントは提出時までに削除*/
 17 
 18 /* boxesの多重配列と問題文の表の関係は以下の通りです 
 19 ** box[0][0] | box[0][1] | box[0][2] | box[0][3]
 20 ** ----------+-----------+-----------+---------- 
 21 ** box[1][0] | box[1][1] | box[1][2] | box[1][3]
 22 ** ----------+-----------+-----------+---------- 
 23 ** box[2][0] | box[2][1] | box[2][2] | box[2][3]
 24 ** ----------+-----------+-----------+---------- 
 25 ** box[3][0] | box[3][1] | box[3][2] | box[3][3]
 26 ** 値が０の場合、箱がまだ置かれていないことを表します。
 27 */
 28 
 29 /* かほりんさん、norminetteをお願いします。今putboxes.cに全ての関数が入っていて、長すぎると怒られるはずなので、>    複数ファイルに分ける必要があると思います。また、関数の中も長すぎるので、別の関数に分担させる必要があると思います
    。 */

★fill_numbers
/* 
 18 ** fill_numbers 
 19 ** ４つ分のint配列を新たに作成し、
 20 ** int a,b,c,dを配列に入れる関数です。 
 21 */

★store_possible_pattern
/*
 29 ** store_possible_pattern
 30 ** 箱の両脇(rowleftとrowright)の数字に応じて、その行に入る４箱（サイズ４のint配列）の全パターン（int配列の配列）
    をint**で返す関数です。
 31 */

★make_line
/*
107 ** make_line
108 ** 箱の多重配列boxesから、方向(direction)と列/行番号を指定して、配列(buf)に格納する関数です。
109 ** 例えば、make_line(boxes, buf, 'u', 3)の場合、col3upからcol3downまでの４つの数字を配列bufに格納します。
110 ** direction = {u(up), d(down), r(right), l(left)}
111 */


★count_visible_box
/*
147 ** count_visible_box
148 ** ある一列（一行）にある箱たち(line)を手前から奥に見て、いくつ箱が見えるかをintで返す関数です。
149 */

★have_same_num
/*
174 ** have_same_num
175 ** ある一行（一列）の箱たちの高さが、重複しているか調べる関数です。重複していたら1、いなかったら0を返します。
176 */

★verify
/*
196 ** verify
197 ** 箱たちの集まりboxesが、問題文の条件を満たしているか調べる関数です。問題文のcol*up, row*left, col*down, row*ri    ghtがそのまま引数に対応しています。箱がない場所があったり、条件に合わないと0、条件に合うと1を返します。
198 */

★print_boxes
/*
263 ** print_boxes
264 ** 箱たちをwrite関数で出力する関数です。
265 ** デバッグなどにもご利用ください。
266 */

★recc_putboxes
/* 
288 ** recc_putboxes() is Recursive function.
289 ** if it can find the right pattern, return 1.
290 ** otherwise, return 0.
291 **
292 ** 再帰的に、箱の配置全パターンを洗い出す関数です。箱の配置が条件を満たしているかをまずverifyで調べて、正しかっ>    たら箱の並び方をprint_boxesで出力してから1を返します。正しくない場合、他の箱の配置をboxesに配列として入れて、rec    c_putboxesを再帰的に呼び出します。いずれの再帰呼び出しでも0が帰ってきた（＝どのパターンでもうまい箱の置き方が見>    つからなかった）場合、０を返します。
293 */

★put_boxes
 /*
351 ** put_boxes
352 ** 最初に呼び出す関数です。
353 ** boxesの初期化を行い、recc_putboxesを呼び出します。
354 ** パタンがみつからなかったらerrorを出力します。
355 */



